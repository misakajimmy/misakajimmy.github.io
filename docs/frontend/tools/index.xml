<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端常用工具链 on MisakaJimmy Blog</title>
    <link>https://misakaJimmy.github.io/docs/frontend/tools/</link>
    <description>Recent content in 前端常用工具链 on MisakaJimmy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://misakaJimmy.github.io/docs/frontend/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Yarn</title>
      <link>https://misakaJimmy.github.io/docs/frontend/tools/yarn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://misakaJimmy.github.io/docs/frontend/tools/yarn/</guid>
      <description>安装yarn 下载 nodejs 通过 npm 安装 1npm install -g yarn 查看版本 1yarn --version 设置淘宝源 1yarn config set registry https://registry.npm.taobao.org 2yarn config set sass_binary_site https://npm.taobao.org/mirrors/node-sass # node-sass 二进制包镜像 3yarn config set electron_mirror https://npm.taobao.org/mirrors/electron/ # electron 二进制包镜像 4yarn config set ELECTRON_MIRROR https://cdn.npm.taobao.org/dist/electron/ # electron 二进制包镜像 5yarn config set puppeteer_download_host https://npm.taobao.org/mirrors # puppeteer 二进制包镜像 6yarn config set chromedriver_cdnurl https://npm.taobao.org/mirrors/chromedriver # chromedriver 二进制包镜像 7yarn config set operadriver_cdnurl https://npm.taobao.org/mirrors/operadriver # operadriver 二进制包镜像 8yarn config set phantomjs_cdnurl https://npm.</description>
    </item>
    
    <item>
      <title>Lerna</title>
      <link>https://misakaJimmy.github.io/docs/frontend/tools/lerna/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://misakaJimmy.github.io/docs/frontend/tools/lerna/</guid>
      <description>项目链接：github.com/lerna/lernaLerna 是一个管理工具，用于管理包含多个软件包（package）的 JavaScript 项目。
关于 将大型代码仓库分割成多个独立版本化的 软件包（package）对于代码共享来说非常有用。但是，如果某些更改 跨越了多个代码仓库的话将变得很 麻烦 并且难以跟踪，并且， 跨越多个代码仓库的测试将迅速变得非常复杂。
为了解决这些（以及许多其它）问题，某些项目会将 代码仓库分割成多个软件包（package），并将每个软件包存放到独立的代码仓库中。但是，例如 Babel, React, Angular, Ember, Meteor, Jest, 等项目以及许多其他项目则是在 一个代码仓库中包含了多个软件包（package）并进行开发。
Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.
Lerna 还可以减少开发和构建环境中大量包副本的时间和空间需求——这通常是将项目分成许多单独的 NPM 包的缺点。有关详细信息，请参阅 hoist documentation。
Lerna repo 是什么样的？ 它实际上很简单。您的文件结构如下所示：
1my-lerna-repo/ 2 package.json 3 packages/ 4 package-1/ 5 package.json 6 package-2/ 7 package.json Lerna 能做什么？ Lerna 中的两个主要命令是 lerna bootstrap 和 lerna publish。</description>
    </item>
    
  </channel>
</rss>
